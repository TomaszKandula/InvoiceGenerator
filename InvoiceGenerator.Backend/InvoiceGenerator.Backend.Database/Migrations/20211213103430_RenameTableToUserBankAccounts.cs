// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace InvoiceGenerator.Backend.Database.Migrations
{
    public partial class RenameTableToUserBankAccounts : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_BatchInvoices_UserBankData",
                table: "BatchInvoices");

            migrationBuilder.DropTable(
                name: "UserBankData");

            migrationBuilder.RenameColumn(
                name: "UserBankDataId",
                table: "BatchInvoices",
                newName: "UserBankAccountId");

            migrationBuilder.RenameIndex(
                name: "IX_BatchInvoices_UserBankDataId",
                table: "BatchInvoices",
                newName: "IX_BatchInvoices_UserBankAccountId");

            migrationBuilder.CreateTable(
                name: "UserBankAccounts",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    BankName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    SwiftNumber = table.Column<string>(type: "nvarchar(11)", maxLength: 11, nullable: false),
                    AccountNumber = table.Column<string>(type: "nvarchar(28)", maxLength: 28, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserBankAccounts", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserBankAccounts_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserBankAccounts_UserId",
                table: "UserBankAccounts",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_BatchInvoices_UserBankAccount",
                table: "BatchInvoices",
                column: "UserBankAccountId",
                principalTable: "UserBankAccounts",
                principalColumn: "Id",
                onDelete: ReferentialAction.Restrict);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_BatchInvoices_UserBankAccount",
                table: "BatchInvoices");

            migrationBuilder.DropTable(
                name: "UserBankAccounts");

            migrationBuilder.RenameColumn(
                name: "UserBankAccountId",
                table: "BatchInvoices",
                newName: "UserBankDataId");

            migrationBuilder.RenameIndex(
                name: "IX_BatchInvoices_UserBankAccountId",
                table: "BatchInvoices",
                newName: "IX_BatchInvoices_UserBankDataId");

            migrationBuilder.CreateTable(
                name: "UserBankData",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AccountNumber = table.Column<string>(type: "nvarchar(28)", maxLength: 28, nullable: false),
                    BankName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    SwiftNumber = table.Column<string>(type: "nvarchar(11)", maxLength: 11, nullable: false),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserBankData", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserBankData_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserBankData_UserId",
                table: "UserBankData",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_BatchInvoices_UserBankData",
                table: "BatchInvoices",
                column: "UserBankDataId",
                principalTable: "UserBankData",
                principalColumn: "Id",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
